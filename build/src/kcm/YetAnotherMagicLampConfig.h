// This file is generated by kconfig_compiler_kf5 from options.kcfg.
// All changes you do to this file will be lost.
#ifndef YETANOTHERMAGICLAMPCONFIG_H
#define YETANOTHERMAGICLAMPCONFIG_H

#include <kconfigskeleton.h>
#include <QCoreApplication>
#include <QDebug>

class YetAnotherMagicLampConfig : public KConfigSkeleton
{
  public:

    static YetAnotherMagicLampConfig *self();
    ~YetAnotherMagicLampConfig();

    /**
      Set Duration
    */
    static
    void setDuration( uint v )
    {
      if (!self()->isImmutable( QStringLiteral( "Duration" ) ))
        self()->mDuration = v;
    }

    /**
      Get Duration
    */
    static
    uint duration()
    {
      return self()->mDuration;
    }

    /**
      Set GridResolution
    */
    static
    void setGridResolution( uint v )
    {
      if (!self()->isImmutable( QStringLiteral( "GridResolution" ) ))
        self()->mGridResolution = v;
    }

    /**
      Get GridResolution
    */
    static
    uint gridResolution()
    {
      return self()->mGridResolution;
    }

    /**
      Set MaxBumpDistance
    */
    static
    void setMaxBumpDistance( uint v )
    {
      if (!self()->isImmutable( QStringLiteral( "MaxBumpDistance" ) ))
        self()->mMaxBumpDistance = v;
    }

    /**
      Get MaxBumpDistance
    */
    static
    uint maxBumpDistance()
    {
      return self()->mMaxBumpDistance;
    }

    /**
      Set InitialShapeFactor
    */
    static
    void setInitialShapeFactor( double v )
    {
      if (v < 0.0)
      {
        qDebug() << "setInitialShapeFactor: value " << v << " is less than the minimum value of 0.0";
        v = 0.0;
      }

      if (v > 1.0)
      {
        qDebug() << "setInitialShapeFactor: value " << v << " is greater than the maximum value of 1.0";
        v = 1.0;
      }

      if (!self()->isImmutable( QStringLiteral( "InitialShapeFactor" ) ))
        self()->mInitialShapeFactor = v;
    }

    /**
      Get InitialShapeFactor
    */
    static
    double initialShapeFactor()
    {
      return self()->mInitialShapeFactor;
    }

    /**
      Set ShapeCurve
    */
    static
    void setShapeCurve( int v )
    {
      if (!self()->isImmutable( QStringLiteral( "ShapeCurve" ) ))
        self()->mShapeCurve = v;
    }

    /**
      Get ShapeCurve
    */
    static
    int shapeCurve()
    {
      return self()->mShapeCurve;
    }

  protected:
    YetAnotherMagicLampConfig();
    friend class YetAnotherMagicLampConfigHelper;


    // Effect-YetAnotherMagicLamp
    uint mDuration;
    uint mGridResolution;
    uint mMaxBumpDistance;
    double mInitialShapeFactor;
    int mShapeCurve;

  private:
};

#endif

